%% INITIALIZATION
run("./compassControlParameters.m");
run("./idealCompassFilterParameters.m");
run("./gyroControlParameters.m");
run("./idealGyroFilterParameters.m");
testInput = "trueHeading";

configurationParamtersTable = table(maxMagnitudeFilteredMagnitudeDBSecondOrder, ...
    maxFrequencyFilteredMagnitudeDBSecondOrder, compassTimeConstant, ...
    gyroCutoffFrequency, gyroTimeConstant);
writetable(configurationParamtersTable ,'analytics/' + testInput + 'Configuration.csv');

%% SIMULATION
simulation = sim('fullSystem','SimulationMode','normal');
% Get results
simulationData = simulation.get('simulationData');
assignin('base','simulationData',simulationData);

% Simulation Data
time = simulationData.time;
signalsNamesOrdered = ["compassSystem", "compassFilter",...
    "fullSystem", "gyroFilter", "gyroSystem", "input", "fullSystemError"].';
compassSystem = simulationData.signals.values(:, 1);
compassFilter = simulationData.signals.values(:, 2);
fullSystem = simulationData.signals.values(:, 3);
gyroFilter = simulationData.signals.values(:, 4);
gyroSystem = simulationData.signals.values(:, 5);
input = simulationData.signals.values(:, 6);
fullSystemError = fullSystem - input;
compassSystemError = compassSystem - input;
compassFilterError = compassFilter - input;
gyroSystemError = gyroSystem - input;
gyroFilterError = gyroFilter - input;
allData = [simulationData.signals.values(:, :),...
           compassSystemError, ...
           compassFilter, ...
           fullSystemError, gyroSystemError, ...
           gyroFilterError, ];

rawDataTable = table(...
    time,...
    compassSystem,...
    compassFilter,...
    fullSystem,...
    gyroFilter,...
    gyroSystem,...
    input,...
    fullSystemError);
writetable(rawDataTable ,'analytics/'...
+ testInput...
+ datestr(now,'_dd_HH_MM_')...
+ 'Raw.csv');

%% Correlations
compassSystemfullSystemErrorCrossCorrelation = xcorr(fullSystemError, compassSystem);
compassFilterfullSystemErrorCrossCorrelation = xcorr(fullSystemError, compassFilter);
fullSystemfullSystemErrorCrossCorrelation = xcorr(fullSystemError, fullSystem);
gyroFilterfullSystemErrorCrossCorrelation = xcorr(fullSystemError, gyroFilter);
gyroSystemfullSystemErrorCrossCorrelation = xcorr(fullSystemError, gyroSystem);
fullSystemErrorAutoCorrelation =  xcorr(fullSystemError, fullSystemError);

correlationData = [compassSystemfullSystemErrorCrossCorrelation,...
    compassFilterfullSystemErrorCrossCorrelation, fullSystemfullSystemErrorCrossCorrelation, ...
    fullSystemfullSystemErrorCrossCorrelation, gyroFilterfullSystemErrorCrossCorrelation, ...
    gyroSystemfullSystemErrorCrossCorrelation, fullSystemErrorAutoCorrelation];

correlationsDataTable = table(...
    compassSystemfullSystemErrorCrossCorrelation,...
    compassFilterfullSystemErrorCrossCorrelation,...
    fullSystemfullSystemErrorCrossCorrelation,...
    gyroFilterfullSystemErrorCrossCorrelation,...
    gyroSystemfullSystemErrorCrossCorrelation,...
    fullSystemErrorAutoCorrelation);
writetable(correlationsDataTable,'analytics/'...
+ testInput...
+ "_t_"...
+ datestr(now,'mm-dd-yyyy HH-MM')...
+ 'Correlations.csv');

figure
stackedplot(correlationsDataTable)
savefig("analytics/"...
    + testInput...
    + datestr(now,'_dd_HH_MM_')...
    + 'CorrelationFig.fig')


%% Plot
figure
plot(time, compassSystem, time, compassFilter, time, fullSystem,...
     time, gyroFilter, time, gyroSystem, time, input, time, fullSystemError)
legend(signalsNamesOrdered)
savefig("analytics/"...
    + testInput...
    + datestr(now,'_dd_HH_MM_')...
    + 'Fig.fig')

%% Signals Processing
% Raw Signals
meanSignals = mean(allData(:, :)).';
standardDeviationSignals = std(allData(:, :)).';
varianceSignals = var(allData(:, :)).';
maxSignals = max(allData(:, :)).';
minSignals = min(allData(:, :)).';
kurtosisSignals = kurtosis(allData(:, :)).';
firstMomentSignals = moment(allData(:, :), 1).';
secondMomentSignals = moment(allData(:, :), 2).';
thirdMomentSignals = moment(allData(:, :), 3).';
fourthMomentSignals = moment(allData(:, :), 4).';
skewnessSignals = skewness(allData(:, :)).';
rmsSignals = rms(allData(:, :)).';
powerSignals = powerbw(allData(:, :)).';
% Correlations
maxCorrelationSignals = max(correlationData).';
meanCorrelationSignals = mean(correlationData).';
standardDeviationSignals = std(correlationData).';
varCorrelationSignals = var(correlationData).';
kurtosisCorrelationSignals = kurtosis(correlationData).';
powerCorrelationSignals = powerbw(correlationData).';
rmsCorrelationSignals = rms(correlationData).';
% overshootSignals = overshoot(fullSystem).';
% undershootSignals = undershoot(fullSystem).';
% settlingTimeSignals = settlingtime(fullSystem).';


%% Display Analytics
analyticsTable = table(signalsNamesOrdered, maxSignals, minSignals, meanSignals,...
    standardDeviationSignals, varianceSignals, kurtosisSignals,...
    skewnessSignals, firstMomentSignals, secondMomentSignals,...
    thirdMomentSignals, fourthMomentSignals, rmsSignals,...
    powerSignals, maxCorrelationSignals, meanCorrelationSignals,...
    standardDeviationSignals, varCorrelationSignals, kurtosisCorrelationSignals,...
    powerCorrelationSignals, rmsCorrelationSignals)
writetable(analyticsTable ,'analytics/'...
     + testInput...
     + datestr(now,'_dd_HH_MM_')...
     + 'Analytics.csv');
%% Spectral Kurtuosis
% i = 1;
% for signalsAmount = 1:6
%     figure
%     pkurtosis(allData(:, i))
%     i = i + 1;
% end

